"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.builder = exports.description = exports.command = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _terminalLink = _interopRequireDefault(require("terminal-link"));

var _lib = require("../../lib");

const command = 'generate';
exports.command = command;
const description = 'Generate the Prisma client';
exports.description = description;

const builder = yargs => {
  yargs.option('force', {
    alias: 'f',
    default: true,
    description: 'Overwrite existing Client',
    type: 'boolean'
  }).option('verbose', {
    alias: 'v',
    default: true,
    description: 'Print more',
    type: 'boolean'
  }).epilogue(`Also see the ${(0, _terminalLink.default)('Redwood CLI Reference', 'https://redwoodjs.com/reference/command-line-interface#db-generate')}`);
};

exports.builder = builder;

const handler = async ({
  verbose = true,
  force = true
}) => {
  if (!_fs.default.existsSync((0, _lib.getPaths)().api.dbSchema)) {
    console.log(`Skipping database and Prisma client generation, no \`schema.prisma\` file found: \`${(0, _lib.getPaths)().api.dbSchema}\``);
    return;
  } // Do not generate the Prisma client if it exists.


  if (!force) {
    // The Prisma client throws if it is not generated.
    try {
      // Import the client from the redwood apps node_modules path.
      const {
        PrismaClient
      } = require(_path.default.join((0, _lib.getPaths)().base, 'node_modules/.prisma/client')); // eslint-disable-next-line


      new PrismaClient();
      return; // Client exists, so abort.
    } catch (e) {// Swallow your pain, and generate.
    }
  }

  return await (0, _lib.runCommandTask)([{
    title: 'Generating the Prisma client...',
    cmd: 'yarn prisma generate'
  }], {
    verbose
  });
};

exports.handler = handler;