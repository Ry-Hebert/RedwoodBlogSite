"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.handler = exports.builder = exports.description = exports.command = void 0;

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/filter"));

var _terminalLink = _interopRequireDefault(require("terminal-link"));

var _lib = require("../../lib");

const command = 'down [decrement]';
exports.command = command;
const description = 'Migrate your database down';
exports.description = description;

const builder = yargs => {
  yargs.positional('decrement', {
    default: 1,
    description: 'Number of backwards migrations to apply',
    type: 'number'
  }).option('verbose', {
    alias: 'v',
    default: true,
    description: 'Print more',
    type: 'boolean'
  }).epilogue(`Also see the ${(0, _terminalLink.default)('Redwood CLI Reference', 'https://redwoodjs.com/reference/command-line-interface#db-down')}`);
};

exports.builder = builder;

const handler = async ({
  decrement,
  verbose = true
}) => {
  var _context;

  await (0, _lib.runCommandTask)([{
    title: 'Migrate database down...',
    cmd: 'yarn prisma',
    args: (0, _filter.default)(_context = ['migrate down', decrement && `${decrement}`, '--experimental']).call(_context, Boolean)
  }], {
    verbose
  });
};

exports.handler = handler;