"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.directoryNameResolver = directoryNameResolver;
exports.followsDirNameConvention = followsDirNameConvention;
exports.basenameNoExt = basenameNoExt;
exports.isLayoutFileName = isLayoutFileName;
exports.isCellFileName = isCellFileName;

var _endsWith = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/ends-with"));

var _path = require("path");

function directoryNameResolver(dirName) {
  const parts = dirName.split('/');
  const pp = parts[parts.length - 1];
  parts.push(pp);
  return parts.join('/') + '.js';
}

function followsDirNameConvention(filePath) {
  const ending = basenameNoExt(filePath) + '/' + (0, _path.basename)(filePath);
  return (0, _endsWith.default)(filePath).call(filePath, ending);
}

function basenameNoExt(path) {
  const parts = (0, _path.basename)(path).split('.');
  if (parts.length > 1) parts.pop();
  return parts.join('.');
}

function isLayoutFileName(f) {
  var _context;

  return (0, _endsWith.default)(_context = basenameNoExt(f)).call(_context, 'Layout');
}

function isCellFileName(f) {
  var _context2;

  return (0, _endsWith.default)(_context2 = basenameNoExt(f)).call(_context2, 'Cell');
}