"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.URL_file = URL_file;
exports.URL_toFile = URL_toFile;

var _url = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/url"));

var _startsWith = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/instance/starts-with"));

var _path = require("path");

var _url2 = require("url");

/**
 * Creates a file:// URL
 * Works with linux and windows paths
 * If the passed in value is already as file:// URL, it returns that same value
 * TOOD: rename to URL_fromFile
 * @param filePath
 */
function URL_file(filePath, ...parts) {
  if ((0, _startsWith.default)(filePath).call(filePath, FILE_SCHEME)) filePath = filePath.substr(FILE_SCHEME.length);
  if (parts.length > 0) filePath = (0, _path.join)(filePath, ...parts);
  return new _url.default(FILE_SCHEME + (0, _path.normalize)(filePath)).href;
}
/**
 *
 * @param uriOrFilePath
 */


function URL_toFile(uriOrFilePath) {
  if (typeof uriOrFilePath !== 'string') throw new Error('arg error');
  if ((0, _startsWith.default)(uriOrFilePath).call(uriOrFilePath, FILE_SCHEME)) return URL_toFile((0, _url2.parse)(uriOrFilePath).path);
  const p = (0, _path.normalize)(uriOrFilePath);
  if (!(0, _path.isAbsolute)(p)) throw new Error('absolut path expected: ' + p);
  return p;
}

const FILE_SCHEME = 'file://';