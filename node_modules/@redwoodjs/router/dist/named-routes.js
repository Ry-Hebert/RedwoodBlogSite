"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.mapNamedRoutes = exports.routes = void 0;

var _createForOfIteratorHelper2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/createForOfIteratorHelper"));

var _internal = require("./internal");

// The first time the routes are loaded, iterate through them and create the named
// route functions.
var namedRoutes = {};
var namedRoutesDone = false;

var mapNamedRoutes = function mapNamedRoutes(routes) {
  if (namedRoutesDone) {
    return namedRoutes;
  }

  var _iterator = (0, _createForOfIteratorHelper2.default)(routes),
      _step;

  try {
    var _loop = function _loop() {
      var route = _step.value;
      var _route$props = route.props,
          path = _route$props.path,
          name = _route$props.name,
          notfound = _route$props.notfound; // Skip the notfound route.

      if (notfound) {
        return "continue";
      } // Check for issues with the path.


      (0, _internal.validatePath)(path); // Create the named route function for this route.

      namedRoutes[name] = function () {
        var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        return (0, _internal.replaceParams)(path, args);
      };
    };

    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _ret = _loop();

      if (_ret === "continue") continue;
    } // Only need to do this once.

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  namedRoutesDone = true;
  return namedRoutes;
};

exports.mapNamedRoutes = mapNamedRoutes;
var routes = namedRoutes;
exports.routes = routes;