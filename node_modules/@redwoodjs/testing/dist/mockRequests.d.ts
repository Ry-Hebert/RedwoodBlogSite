import { RequestHandler, GraphQLMockedContext, GraphQLMockedRequest } from 'msw';
/**
 * This will import the correct runtime (node/ browser) of MSW,
 * and start the functionality that captures requests.
 *
 * Request handlers can be registered lazily (via `mockGraphQL<Query|Mutation>`),
 * the queue will be drained and used.
 */
export declare const startMSW: () => Promise<any>;
export declare const setupRequestHandlers: () => void;
export declare const registerHandler: (handler: RequestHandler) => void;
export declare type DataFunction = (variables: Record<string, any>, { req, ctx, }: {
    req: GraphQLMockedRequest;
    ctx: GraphQLMockedContext<{}>;
}) => {};
export declare const mockGraphQLQuery: (operation: string, data: DataFunction | {}) => {} | DataFunction;
export declare const mockGraphQLMutation: (operation: string, data: DataFunction | {}) => {} | DataFunction;
//# sourceMappingURL=mockRequests.d.ts.map