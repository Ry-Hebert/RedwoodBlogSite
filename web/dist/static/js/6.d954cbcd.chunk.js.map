{"version":3,"sources":["layouts/PostsLayout/PostsLayout.js","components/PostForm/PostForm.js","components/NewPost/NewPost.js","pages/NewPostPage/NewPostPage.js"],"names":["PostsLayout","props","className","timeout","to","routes","posts","newPost","children","PostForm","onSubmit","data","onSave","post","id","error","wrapperClassName","titleClassName","listClassName","name","errorClassName","defaultValue","title","validation","required","body","disabled","loading","CREATE_POST_MUTATION","gql","NewPost","addMessage","useFlash","useMutation","onCompleted","navigate","classes","createPost","input","variables","NewPostPage"],"mappings":";;;;;sJAsBeA,IAnBK,SAACC,GACnB,OACE,yBAAKC,UAAU,eACb,kBAAC,QAAD,CAAOC,QAAS,MAChB,4BAAQD,UAAU,aAChB,wBAAIA,UAAU,iCACZ,kBAAC,OAAD,CAAME,GAAIC,SAAOC,QAASJ,UAAU,WAApC,UAIF,kBAAC,OAAD,CAAME,GAAIC,SAAOE,UAAWL,UAAU,6BACpC,yBAAKA,UAAU,kBAAf,KADF,cAIF,0BAAMA,UAAU,WAAWD,EAAMO,a;;;;;yHCiDxBC,IAzDE,SAACR,GAAU,QAK1B,OACE,yBAAKC,UAAU,mBACb,kBAAC,OAAD,CAAMQ,SANO,SAACC,GAAS,MACzBV,EAAMW,OAAOD,EAAMV,SAAnB,UAAmBA,EAAOY,YAA1B,aAAmB,EAAaC,KAKJC,MAAOd,EAAMc,OACrC,kBAAC,YAAD,CACEA,MAAOd,EAAMc,MACbC,iBAAiB,wBACjBC,eAAe,sBACfC,cAAc,uBAGhB,kBAAC,QAAD,CACEC,KAAK,QACLjB,UAAU,WACVkB,eAAe,2BAHjB,SAOA,kBAAC,YAAD,CACED,KAAK,QACLE,aAAY,UAAEpB,EAAMY,YAAR,aAAE,EAAYS,MAC1BpB,UAAU,WACVkB,eAAe,0BACfG,WAAY,CAAEC,UAAU,KAE1B,kBAAC,aAAD,CAAYL,KAAK,QAAQjB,UAAU,mBAEnC,kBAAC,QAAD,CACEiB,KAAK,OACLjB,UAAU,WACVkB,eAAe,2BAHjB,QAOA,kBAAC,YAAD,CACED,KAAK,OACLE,aAAY,UAAEpB,EAAMY,YAAR,aAAE,EAAYY,KAC1BvB,UAAU,WACVkB,eAAe,0BACfG,WAAY,CAAEC,UAAU,KAE1B,kBAAC,aAAD,CAAYL,KAAK,OAAOjB,UAAU,mBAElC,yBAAKA,UAAU,mBACb,kBAAC,SAAD,CAAQwB,SAAUzB,EAAM0B,QAASzB,UAAU,4BAA3C,a;;;;;;;;;;;;;4bCrDV,IAAM0B,EAAuBC,IAAH,KAiCXC,EAzBC,WAAM,IACZC,EAAeC,qBAAfD,WADY,EAEqBE,sBAAYL,EAAsB,CACzEM,YAAa,WACXC,mBAAS9B,SAAOC,SAChByB,EAAW,gBAAiB,CAAEK,QAAS,wBALvB,WAEbC,EAFa,YAECV,EAFD,EAECA,QAASZ,EAFV,EAEUA,MAW9B,OACE,yBAAKb,UAAU,cACb,4BAAQA,UAAU,qBAChB,wBAAIA,UAAU,mCAAd,aAEF,yBAAKA,UAAU,mBACb,kBAACO,EAAA,EAAD,CAAUG,OAVD,SAAC0B,GACdD,EAAW,CAAEE,UAAW,CAAED,YASIX,QAASA,EAASZ,MAAOA,OCpB5CyB,UARK,WAClB,OACE,kBAACxC,EAAA,EAAD,KACE,kBAAC,EAAD","file":"static/js/6.d954cbcd.chunk.js","sourcesContent":["import { Link, routes } from '@redwoodjs/router'\nimport { Flash } from '@redwoodjs/web'\n\nconst PostsLayout = (props) => {\n  return (\n    <div className=\"rw-scaffold\">\n      <Flash timeout={1000} />\n      <header className=\"rw-header\">\n        <h1 className=\"rw-heading rw-heading-primary\">\n          <Link to={routes.posts()} className=\"rw-link\">\n            Posts\n          </Link>\n        </h1>\n        <Link to={routes.newPost()} className=\"rw-button rw-button-green\">\n          <div className=\"rw-button-icon\">+</div> New Post\n        </Link>\n      </header>\n      <main className=\"rw-main\">{props.children}</main>\n    </div>\n  )\n}\n\nexport default PostsLayout\n","import {\n  Form,\n  FormError,\n  FieldError,\n  Label,\n  TextField,\n  Submit,\n} from '@redwoodjs/forms'\n\nconst PostForm = (props) => {\n  const onSubmit = (data) => {\n    props.onSave(data, props?.post?.id)\n  }\n\n  return (\n    <div className=\"rw-form-wrapper\">\n      <Form onSubmit={onSubmit} error={props.error}>\n        <FormError\n          error={props.error}\n          wrapperClassName=\"rw-form-error-wrapper\"\n          titleClassName=\"rw-form-error-title\"\n          listClassName=\"rw-form-error-list\"\n        />\n\n        <Label\n          name=\"title\"\n          className=\"rw-label\"\n          errorClassName=\"rw-label rw-label-error\"\n        >\n          Title\n        </Label>\n        <TextField\n          name=\"title\"\n          defaultValue={props.post?.title}\n          className=\"rw-input\"\n          errorClassName=\"rw-input rw-input-error\"\n          validation={{ required: true }}\n        />\n        <FieldError name=\"title\" className=\"rw-field-error\" />\n\n        <Label\n          name=\"body\"\n          className=\"rw-label\"\n          errorClassName=\"rw-label rw-label-error\"\n        >\n          Body\n        </Label>\n        <TextField\n          name=\"body\"\n          defaultValue={props.post?.body}\n          className=\"rw-input\"\n          errorClassName=\"rw-input rw-input-error\"\n          validation={{ required: true }}\n        />\n        <FieldError name=\"body\" className=\"rw-field-error\" />\n\n        <div className=\"rw-button-group\">\n          <Submit disabled={props.loading} className=\"rw-button rw-button-blue\">\n            Save\n          </Submit>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default PostForm\n","import { useMutation, useFlash } from '@redwoodjs/web'\nimport { navigate, routes } from '@redwoodjs/router'\nimport PostForm from 'src/components/PostForm'\n\nconst CREATE_POST_MUTATION = gql`\n  mutation CreatePostMutation($input: CreatePostInput!) {\n    createPost(input: $input) {\n      id\n    }\n  }\n`\n\nconst NewPost = () => {\n  const { addMessage } = useFlash()\n  const [createPost, { loading, error }] = useMutation(CREATE_POST_MUTATION, {\n    onCompleted: () => {\n      navigate(routes.posts())\n      addMessage('Post created.', { classes: 'rw-flash-success' })\n    },\n  })\n\n  const onSave = (input) => {\n    createPost({ variables: { input } })\n  }\n\n  return (\n    <div className=\"rw-segment\">\n      <header className=\"rw-segment-header\">\n        <h2 className=\"rw-heading rw-heading-secondary\">New Post</h2>\n      </header>\n      <div className=\"rw-segment-main\">\n        <PostForm onSave={onSave} loading={loading} error={error} />\n      </div>\n    </div>\n  )\n}\n\nexport default NewPost\n","import PostsLayout from 'src/layouts/PostsLayout'\nimport NewPost from 'src/components/NewPost'\n\nconst NewPostPage = () => {\n  return (\n    <PostsLayout>\n      <NewPost />\n    </PostsLayout>\n  )\n}\n\nexport default NewPostPage\n"],"sourceRoot":""}