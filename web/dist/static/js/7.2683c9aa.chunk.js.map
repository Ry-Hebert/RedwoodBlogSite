{"version":3,"sources":["layouts/PostsLayout/PostsLayout.js","components/Post/Post.js","components/PostCell/PostCell.js","pages/PostPage/PostPage.js"],"names":["PostsLayout","props","className","timeout","to","routes","posts","newPost","children","DELETE_POST_MUTATION","gql","Post","datetime","post","addMessage","useFlash","useMutation","onCompleted","navigate","classes","deletePost","id","title","body","createdAt","dateTime","Date","toUTCString","editPost","href","onClick","confirm","variables","QUERY","PostPage","PostCell"],"mappings":";;;;;sJAsBeA,IAnBK,SAACC,GACnB,OACE,yBAAKC,UAAU,eACb,kBAAC,QAAD,CAAOC,QAAS,MAChB,4BAAQD,UAAU,aAChB,wBAAIA,UAAU,iCACZ,kBAAC,OAAD,CAAME,GAAIC,SAAOC,QAASJ,UAAU,WAApC,UAIF,kBAAC,OAAD,CAAME,GAAIC,SAAOE,UAAWL,UAAU,6BACpC,yBAAKA,UAAU,kBAAf,KADF,cAIF,0BAAMA,UAAU,WAAWD,EAAMO,a;;;;;;;;;;;;;gbCdvC,IAAMC,EAAuBC,IAAH,KA2FXC,EA/DF,SAAC,GAAa,IAZVC,EAYDC,EAAW,EAAXA,KACNC,EAAeC,qBAAfD,WADiB,EAEJE,sBAAYP,EAAsB,CACrDQ,YAAa,WACXC,mBAASb,SAAOC,SAChBQ,EAAW,gBAAiB,CAAEK,QAAS,wBAHpCC,EAFkB,YAezB,OACE,oCACE,yBAAKlB,UAAU,cACb,4BAAQA,UAAU,qBAChB,wBAAIA,UAAU,mCAAd,QACQW,EAAKQ,GADb,YAIF,2BAAOnB,UAAU,YACf,+BACE,4BACE,kCACA,4BAAKW,EAAKQ,KAEZ,4BACE,qCACA,4BAAKR,EAAKS,QAEZ,4BACE,oCACA,4BAAKT,EAAKU,OAEZ,4BACE,0CACA,6BAnDGX,EAmDUC,EAAKW,UAjD5B,0BAAMC,SAAUb,EAAUU,MAAOV,GAC9B,IAAIc,KAAKd,GAAUe,qBAqDpB,yBAAKzB,UAAU,mBACb,kBAAC,OAAD,CACEE,GAAIC,SAAOuB,SAAS,CAAEP,GAAIR,EAAKQ,KAC/BnB,UAAU,4BAFZ,QAMA,uBACE2B,KAAK,IACL3B,UAAU,0BACV4B,QAAS,kBA7CMT,EA6CcR,EAAKQ,QA5CpCU,QAAQ,wCAA0CV,EAAK,MACzDD,EAAW,CAAEY,UAAW,CAAEX,SAFR,IAACA,IA0CjB,a,gMChFD,IAAMY,EAAQvB,IAAH,K,sCAWK,kBAAM,4C,MAER,kBAAM,gD,QAEJ,SAAC,GAAa,IAAXG,EAAW,EAAXA,KACxB,OAAO,kBAAC,EAAD,CAAMA,KAAMA,OCPNqB,UARE,SAAC,GAAW,IAATb,EAAS,EAATA,GAClB,OACE,kBAACrB,EAAA,EAAD,KACE,kBAACmC,EAAD,CAAUd,GAAIA","file":"static/js/7.2683c9aa.chunk.js","sourcesContent":["import { Link, routes } from '@redwoodjs/router'\nimport { Flash } from '@redwoodjs/web'\n\nconst PostsLayout = (props) => {\n  return (\n    <div className=\"rw-scaffold\">\n      <Flash timeout={1000} />\n      <header className=\"rw-header\">\n        <h1 className=\"rw-heading rw-heading-primary\">\n          <Link to={routes.posts()} className=\"rw-link\">\n            Posts\n          </Link>\n        </h1>\n        <Link to={routes.newPost()} className=\"rw-button rw-button-green\">\n          <div className=\"rw-button-icon\">+</div> New Post\n        </Link>\n      </header>\n      <main className=\"rw-main\">{props.children}</main>\n    </div>\n  )\n}\n\nexport default PostsLayout\n","import { useMutation, useFlash } from '@redwoodjs/web'\nimport { Link, routes, navigate } from '@redwoodjs/router'\n\nconst DELETE_POST_MUTATION = gql`\n  mutation DeletePostMutation($id: Int!) {\n    deletePost(id: $id) {\n      id\n    }\n  }\n`\n\nconst jsonDisplay = (obj) => {\n  return (\n    <pre>\n      <code>{JSON.stringify(obj, null, 2)}</code>\n    </pre>\n  )\n}\n\nconst timeTag = (datetime) => {\n  return (\n    <time dateTime={datetime} title={datetime}>\n      {new Date(datetime).toUTCString()}\n    </time>\n  )\n}\n\nconst checkboxInputTag = (checked) => {\n  return <input type=\"checkbox\" checked={checked} disabled />\n}\n\nconst Post = ({ post }) => {\n  const { addMessage } = useFlash()\n  const [deletePost] = useMutation(DELETE_POST_MUTATION, {\n    onCompleted: () => {\n      navigate(routes.posts())\n      addMessage('Post deleted.', { classes: 'rw-flash-success' })\n    },\n  })\n\n  const onDeleteClick = (id) => {\n    if (confirm('Are you sure you want to delete post ' + id + '?')) {\n      deletePost({ variables: { id } })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"rw-segment\">\n        <header className=\"rw-segment-header\">\n          <h2 className=\"rw-heading rw-heading-secondary\">\n            Post {post.id} Detail\n          </h2>\n        </header>\n        <table className=\"rw-table\">\n          <tbody>\n            <tr>\n              <th>Id</th>\n              <td>{post.id}</td>\n            </tr>\n            <tr>\n              <th>Title</th>\n              <td>{post.title}</td>\n            </tr>\n            <tr>\n              <th>Body</th>\n              <td>{post.body}</td>\n            </tr>\n            <tr>\n              <th>Created at</th>\n              <td>{timeTag(post.createdAt)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <nav className=\"rw-button-group\">\n        <Link\n          to={routes.editPost({ id: post.id })}\n          className=\"rw-button rw-button-blue\"\n        >\n          Edit\n        </Link>\n        <a\n          href=\"#\"\n          className=\"rw-button rw-button-red\"\n          onClick={() => onDeleteClick(post.id)}\n        >\n          Delete\n        </a>\n      </nav>\n    </>\n  )\n}\n\nexport default Post\n","import Post from 'src/components/Post'\n\nexport const QUERY = gql`\n  query FIND_POST_BY_ID($id: Int!) {\n    post: post(id: $id) {\n      id\n      title\n      body\n      createdAt\n    }\n  }\n`\n\nexport const Loading = () => <div>Loading...</div>\n\nexport const Empty = () => <div>Post not found</div>\n\nexport const Success = ({ post }) => {\n  return <Post post={post} />\n}\n","import PostsLayout from 'src/layouts/PostsLayout'\nimport PostCell from 'src/components/PostCell'\n\nconst PostPage = ({ id }) => {\n  return (\n    <PostsLayout>\n      <PostCell id={id} />\n    </PostsLayout>\n  )\n}\n\nexport default PostPage\n"],"sourceRoot":""}